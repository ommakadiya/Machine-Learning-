# -*- coding: utf-8 -*-
"""Logistic regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1naxIFi8uG7IlqerFY4_eqhKBtzyAzhzv
"""

!unzip archive.zip

import pandas as pd
df = pd.read_csv('diabetes.csv')
print("DataFrame Head:")
display(df.head())
print("\nDataFrame Statistics:")
display(df.describe())

feature_col=['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']
x=df[feature_col]
y=df.Outcome

#train test split
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=16)

#standard scaler
from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
x_train_scaled=scaler.fit_transform(x_train)
x_test_scaled=scaler.fit_transform(x_test)

#build the logistic regression model
from sklearn.linear_model import LogisticRegression

model=LogisticRegression(max_iter=1000)

model.fit(x_train_scaled,y_train)

y_pred=model.predict(x_test_scaled)

print(y_pred)

#efficinecy or evalution permeters
from sklearn import metrics

confusion_matrix=metrics.confusion_matrix(y_pred,y_test)
print(confusion_matrix)
#back propogeted (reitert 1000 times )

#homewrok
# work over design (mathmetical) model of logistic regression fro multi-class classfication
